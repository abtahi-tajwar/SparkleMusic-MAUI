<?xml version="1.0" encoding="utf-8"?>

<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:partial="clr-namespace:SparkleMusic_MAUI.UIComponent.Button"
             xmlns:component="clr-namespace:SparkleMusic_MAUI.UIComponent"
             xmlns:local="clr-namespace:SparkleMusic_MAUI.Views.MainPage"
             xmlns:model="clr-namespace:SparkleMusic_MAUI.Module.Music.Entity"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converter="clr-namespace:SparkleMusic_MAUI.Utils.Converters"
             x:Name="MainPageView"
             x:DataType="local:MainPageViewModel"
             x:Class="SparkleMusic_MAUI.MainPage"
             Background="{StaticResource BackgroundPrimary}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converter:ArrayContainsConverters x:Key="ArrayContainsConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <AbsoluteLayout>
        <toolkit:MediaElement
            x:Name="MyMediaElement"
            Source="{Binding CurrentPlayingSource}" />
        <Grid AbsoluteLayout.LayoutFlags="All" AbsoluteLayout.LayoutBounds="0,0,1,1" RowDefinitions="Auto, Auto, *">
            <Grid Grid.Row="0" ColumnDefinitions="*, Auto" Padding="22, 17">
                <Image Grid.Column="0" HorizontalOptions="StartAndExpand" Source="main_logo.png" />
                <HorizontalStackLayout Grid.Column="1">
                    <partial:IconButton Icon="profile_icon.png"></partial:IconButton>
                    <partial:IconButton Icon="settings_icon.png"></partial:IconButton>
                </HorizontalStackLayout>
            </Grid>
            <!-- Played Music Portion -->
            <Grid
                IsVisible="{Binding showCurrentMusicControls}"
                Grid.Row="1"
                ColumnDefinitions="*, Auto"
                RowDefinitions="Auto, Auto"
                Padding="22, 18">
                <VerticalStackLayout Grid.Column="0" Grid.Row="0">
                    <Label FontSize="20" TextColor="White" Text="{Binding CurrentPlayingName}" />
                    <Label FontSize="12" TextColor="White">
                        <Label.Text>
                            <MultiBinding StringFormat="{}{0} / {1}">
                                <Binding Path="CurrentPositionTimeString" />
                                <Binding Path="TotalDurationTimeString" />
                            </MultiBinding>
                        </Label.Text>
                    </Label>
                </VerticalStackLayout>
                <HorizontalStackLayout Grid.Column="1">
                    <partial:IconButton Icon="fast_backward_icon.png"></partial:IconButton>
                    <component:ShowIf Condition="{Binding IsPlaying}">
                        <component:ShowIf.False>
                            <partial:IconButton
                                Icon="play_icon.png"
                                x:Name="CustomPlayButton" />
                        </component:ShowIf.False>
                        <component:ShowIf.True>
                            <partial:IconButton
                                Icon="pause_icon.png"
                                x:Name="CustomPauseButton" />
                        </component:ShowIf.True>
                    </component:ShowIf>
                    <!-- <partial:IconButton -->
                    <!--     Icon="play_icon.png" -->
                    <!--     x:Name="CustomPlayButton" /> -->
                    <partial:IconButton Icon="fast_forward_icon.png"></partial:IconButton>
                </HorizontalStackLayout>
                <Slider
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    x:Name="CurrentSongSeeker"
                    Maximum="{Binding CurrentPlayingMusicDurationInMilliSeconds}"
                    Value="{Binding CurrentPlayingPositionInMilliSeconds}" />
            </Grid>
            <CollectionView
                Grid.Row="2"
                Margin="22, 0"
                VerticalOptions="FillAndExpand"
                x:Name="MusicCollection"
                ItemsSource="{Binding Musics}">
                <CollectionView.EmptyView>
                    <StackLayout Spacing="10" Margin="0, 100" Padding="20" HorizontalOptions="Center"
                                 VerticalOptions="Center">
                        <Image Source="empty_list.png" HeightRequest="100" />
                        <Label HorizontalTextAlignment="Center" Text="No songs found!" FontSize="18" TextColor="Gray" />
                        <Button Command="{Binding PlusButtonClickCommand}" HeightRequest="40" MaximumHeightRequest="40"
                                ImageSource="plus_white_icon.png" Text="Start Importing" />
                    </StackLayout>

                </CollectionView.EmptyView>
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="model:MusicEntity">
                        <ContentView x:Name="MusicCollectionItem">
                            <ContentView.Behaviors>
                                <toolkit:TouchBehavior
                                    BindingContext="{Binding Source={x:Reference MusicCollectionItem}, Path=BindingContext}"
                                    LongPressCommand="{Binding BindingContext.MusicLongPressCommand, Source={x:Reference MainPageView}}"
                                    Command="{Binding BindingContext.MusicSelectCommand, Source={x:Reference MainPageView}}"
                                    CommandParameter="{Binding .}"
                                    LongPressCommandParameter="{Binding Source={x:Reference MusicCollection}, Path=BindingContext.Musics}"
                                    LongPressDuration="400"
                                    IsEnabled="True"
                                    PressedOpacity="0.6"
                                    />
                            </ContentView.Behaviors>
                            <Grid RowDefinitions="*, Auto">
                                <Grid Grid.Row="0" ColumnDefinitions="Auto,*,Auto,Auto">
                                    <!-- <Grid.GestureRecognizers> -->
                                    <!--     <TapGestureRecognizer -->
                                    <!--         Command="{Binding Source={RelativeSource AncestorType={x:Type local:MainPageViewModel}}, Path=MusicSelectCommand}" -->
                                    <!--         CommandParameter="{Binding .}" /> -->
                                    <!-- </Grid.GestureRecognizers> -->
                                    <!-- <Grid.GestureRecognizers> -->
                                    <!--     <TapGestureRecognizer -->
                                    <!--         Command="{Binding Source={x:Reference MainPageView}, Path=BindingContext.MusicSelectCommand}" -->
                                    <!--         CommandParameter="{Binding .}" /> -->
                                    <!-- </Grid.GestureRecognizers> -->
                                    <Image Grid.Column="0" Source="{Binding Image}" HeightRequest="40"
                                           WidthRequest="40" />
                                    <VerticalStackLayout Grid.Column="1" VerticalOptions="Center" Margin="10, 0">
                                        <Label TextColor="White" Text="{Binding Title}" />
                                        <Label FontSize="10" TextColor="White" Text="{Binding Duration}" />
                                    </VerticalStackLayout>
                                    <CheckBox
                                        HeightRequest="10"
                                        WidthRequest="10"
                                        IsVisible="{Binding 
                                            Source={RelativeSource AncestorType={x:Type local:MainPageViewModel}}, Path=SelectModeOn}"
                                        IsChecked="{
                                            Binding Source={RelativeSource AncestorType={x:Type local:MainPageViewModel}}, 
                                            Path=SelectedMusics, 
                                            Converter={StaticResource ArrayContainsConverter},
                                            ConverterParameter={Binding Source={RelativeSource AncestorType={x:Type local:MainPageViewModel}}}
                                            }"
                                        Grid.Column="2" />
                                    <BoxView
                                        Grid.Column="3"
                                        BackgroundColor="{StaticResource Primary}"
                                        WidthRequest="3"
                                        VerticalOptions="Fill" />
                                </Grid>
                                <!-- Spacer -->
                                <BoxView Grid.Row="1" HeightRequest="5" BackgroundColor="Transparent" />
                            </Grid>
                        </ContentView>

                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </Grid>
        <Grid
            AbsoluteLayout.LayoutBounds="0.95,0.98,AutoSize,AutoSize"
            AbsoluteLayout.LayoutFlags="PositionProportional"
            ColumnDefinitions="Auto, Auto"
            ColumnSpacing="5"
            >
            <Button
                IsVisible="{Binding SelectModeOn}"
                Grid.Column="0"
                Text="Cancel"
                MaximumHeightRequest="40"
                Command="{Binding CancelSelectModePressCommand}"
                />
            <Button
                Grid.Column="0"
                Text="Select"
                MaximumHeightRequest="40"
                Command="{Binding SelectModePressCommand}"
                >
                <Button.Triggers>
                    <DataTrigger TargetType="Button" Binding="{Binding SelectModeOn}" Value="False">
                        <Setter Property="IsVisible" Value="True"/>
                    </DataTrigger>
                    <DataTrigger TargetType="Button" Binding="{Binding SelectModeOn}" Value="True">
                        <Setter Property="IsVisible" Value="False"/>
                    </DataTrigger>
                </Button.Triggers>

            </Button>
            <Button
                Grid.Column="1"
                ImageSource="plus_white_icon.png" MaximumHeightRequest="40" MaximumWidthRequest="40"
                Background="{StaticResource Accent}"
                Command="{Binding PlusButtonClickCommand}" />
        </Grid>
        <!-- <local:MusicContextMenu -->
        <!--     AbsoluteLayout.LayoutBounds="0.5, 0.98, AutoSize, AutoSize" -->
        <!--     AbsoluteLayout.LayoutFlags="PositionProportional" /> -->

    </AbsoluteLayout>

</ContentPage>